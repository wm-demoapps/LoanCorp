/*Copyright (c) 2020-2021 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.loancorpv2.loancorpv2;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * LoanOffers generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`loan_offers`")
public class LoanOffers implements Serializable {

    private Integer id;
    private Timestamp createtime;
    private Integer laId;
    private String status;
    private Integer validityPeriod;
    private Integer loanApplicationId;
    private LoanApplication loanApplication;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`createtime`", nullable = false)
    public Timestamp getCreatetime() {
        return this.createtime;
    }

    public void setCreatetime(Timestamp createtime) {
        this.createtime = createtime;
    }

    @Column(name = "`la_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLaId() {
        return this.laId;
    }

    public void setLaId(Integer laId) {
        this.laId = laId;
    }

    @Column(name = "`status`", nullable = true, length = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`validity_period`", nullable = true, scale = 0, precision = 10)
    public Integer getValidityPeriod() {
        return this.validityPeriod;
    }

    public void setValidityPeriod(Integer validityPeriod) {
        this.validityPeriod = validityPeriod;
    }

    @Column(name = "`loan_application_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLoanApplicationId() {
        return this.loanApplicationId;
    }

    public void setLoanApplicationId(Integer loanApplicationId) {
        this.loanApplicationId = loanApplicationId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`la_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_loan_offers_TO_loan_akQOjW`"))
    @Fetch(FetchMode.JOIN)
    public LoanApplication getLoanApplication() {
        return this.loanApplication;
    }

    public void setLoanApplication(LoanApplication loanApplication) {
        if(loanApplication != null) {
            this.laId = loanApplication.getId();
        }

        this.loanApplication = loanApplication;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LoanOffers)) return false;
        final LoanOffers loanOffers = (LoanOffers) o;
        return Objects.equals(getId(), loanOffers.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
