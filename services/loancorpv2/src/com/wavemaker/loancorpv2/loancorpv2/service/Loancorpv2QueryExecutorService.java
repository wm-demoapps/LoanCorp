/*Copyright (c) 2020-2021 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.loancorpv2.loancorpv2.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.io.OutputStream;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportOptions;

import com.wavemaker.loancorpv2.loancorpv2.models.query.*;

public interface Loancorpv2QueryExecutorService {

    Page<GetloanappdetailsResponse> executeGetloanappdetails(Pageable pageable);

    void exportGetloanappdetails(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdateLoanApplicationStatus(UpdateLoanApplicationStatusRequest updateLoanApplicationStatusRequest);

    Page<GetPendingLoansResponse> executeGetPendingLoans(Pageable pageable);

    void exportGetPendingLoans(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<ValidateUserResponse> executeValidateUser(String id, String pswd, Pageable pageable);

    void exportValidateUser(String id, String pswd, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<TestCustomerDetailsResponse> executeTest_customer_details(String id, Pageable pageable);

    void exportTest_customer_details(String id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetCustomerLoanDetailsResponse> executeGetCustomerLoanDetails(String id, Pageable pageable);

    void exportGetCustomerLoanDetails(String id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetKycImageResponse> executeGetKycImage(String id, Pageable pageable);

    InputStream getKycImageContentForGetKycImage(Long id1, String id) throws EntityNotFoundException;

    void exportGetKycImage(String id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetCustomerIdResponse> executeGetCustomerId(String id, Pageable pageable);

    void exportGetCustomerId(String id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}
